---
import Sidebar from "./SideBar.astro";
import MobileSideBar from "./MobileSideBar.tsx";
import type { Subscription } from "../types";
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);
const userEmail = session?.user?.email || undefined;

const API_URL = import.meta.env.API_URL;

async function fetchBlogs() {
    const baseUrl = userEmail
        ? `${API_URL}/subscribed-blogs?userEmail=${userEmail}`
        : `${API_URL}/subscribed-blogs`;

    const res = await fetch(baseUrl, {
        headers: {
            "Content-Type": "application/json",
        },
    });

    return await res.json();
}

const subs: Subscription[] = await fetchBlogs();

// Sort by subscribed
subs.sort((a, b) =>
    a.subscribed === b.subscribed ? 0 : a.subscribed ? -1 : 1,
);

const comingSoonEntry = {
    blogId: 1000,
    blogLink: "/",
    companyName: "More coming soon!",
    subscribed: false,
};

subs.push(comingSoonEntry);
---

<div class="dark:text-black">
    <Sidebar
        session={session}
        userEmail={userEmail}
        apiUrl={API_URL}
        subs={subs}
    />
    <MobileSideBar
        client:load
        session={session}
        userEmail={userEmail}
        apiUrl={API_URL}
        subs={subs}
    />
</div>
