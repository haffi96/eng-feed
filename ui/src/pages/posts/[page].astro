---
import Layout from "../../layouts/Layout.astro";
import ThemeButton from "../../components/ThemeToggle";
import BlogView from "../../components/BlogView.astro";
import type { Post } from "../../types";
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);

if (session && Date.parse(session.expires) < Date.now()) {
    return Astro.redirect("/login");
}

const userEmail = session?.user?.email || undefined;

const { page } = Astro.params;

export async function fetchPostsForPage(page: number, userEmail?: string) {
    const API_URL = import.meta.env.API_URL as string;
    const limit = 10;
    const offset = (page - 1) * limit;

    const baseUrl = userEmail
        ? `${API_URL}/posts?userEmail=${userEmail}&`
        : `${API_URL}/posts?`;

    const res = await fetch(`${baseUrl}offset=${offset}&limit=${limit}`, {
        headers: {
            "Content-Type": "application/json",
        },
    });
    const postsData: Post[] = await res.json();
    return postsData;
}

const pageNumber = Number(page);

const prevPage = pageNumber !== 1 ? pageNumber - 1 : 1;

const posts = await fetchPostsForPage(pageNumber, userEmail);

const nextPage = posts.length > 1 ? pageNumber + 1 : pageNumber;
---

<Layout title="Engineering blogs">
    <main>
        <div class="text-end">
            <ThemeButton client:only />
        </div>
        <div class="items-center text-center p-5">
            <div>
                <h1 class="text-xl font-extrabold">Latest posts</h1>
                <div class="flex flex-row space-x-1">
                    <a
                        href=`/posts/${prevPage}`
                        class="hover:bg-zinc-600 shadow-zinc-600 rounded-lg p-2 shadow-md transition:ease-in duration-100"
                    >
                        Prev
                    </a>
                    <a
                        href=`/posts/${nextPage}`
                        class="hover:bg-zinc-600 shadow-zinc-600 rounded-lg p-2 shadow-md transition:ease-in duration-100"
                    >
                        Next
                    </a>
                </div>
            </div>
            {
                posts.length > 1 ? (
                    posts.map((p: any) => {
                        return <BlogView blog={p} />;
                    })
                ) : (
                    <div class="text-lg p-10">No more posts...</div>
                )
            }
        </div>
    </main>
</Layout>
